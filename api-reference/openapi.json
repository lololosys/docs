{
  "openapi": "3.1.0",
  "info": {
    "title": "Docswrite API",
    "description": "REST API for publishing Google Docs to WordPress with Docswrite",
    "version": "1.0.0",
    "contact": {
      "name": "Docswrite Support",
      "url": "https://join.slack.com/t/docswritecom/shared_invite/zt-1j0f1wly8-8lEYgDLDGfBFRkh50SRF7Q",
      "email": "support@docswrite.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.docswrite.com",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "apiToken": []
    }
  ],
  "paths": {
    "/api/export": {
      "post": {
        "summary": "Create WordPress Post",
        "description": "Create or update a WordPress post/page from a Google Docs document",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "description": "Your personal API token",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Post creation parameters",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Post creation initiated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatePostResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid API token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "429": {
            "description": "Rate limit exceeded",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/job/status": {
      "post": {
        "summary": "Get Job Status",
        "description": "Check the status of a publishing job",
        "security": [
          {
            "jwtToken": []
          }
        ],
        "requestBody": {
          "description": "Job status request",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Job status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid JWT token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - cannot access this job",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "apiToken": {
        "type": "apiKey",
        "in": "query",
        "name": "token",
        "description": "API token obtained from Docswrite dashboard"
      },
      "jwtToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT token for authenticated requests"
      }
    },
    "schemas": {
      "CreatePostRequest": {
        "type": "object",
        "required": [
          "google_docs_url"
        ],
        "properties": {
          "google_docs_url": {
            "type": "string",
            "format": "uri",
            "description": "URL of the Google Doc (must be shared with 'anyone with link')",
            "example": "https://docs.google.com/document/d/1aBcDeFg/edit"
          },
          "title": {
            "type": "string",
            "description": "Post title (defaults to Google Docs title)",
            "example": "My Blog Post"
          },
          "slug": {
            "type": "string",
            "description": "Custom URL slug (auto-generated if not provided)",
            "example": "my-blog-post"
          },
          "tags": {
            "type": "string",
            "description": "Comma-separated list of tags",
            "example": "technology, wordpress, automation"
          },
          "categories": {
            "type": "string",
            "description": "Comma-separated list of categories",
            "example": "Technology, Tutorials"
          },
          "state": {
            "type": "string",
            "enum": ["draft", "publish"],
            "default": "draft",
            "description": "Post publication status"
          },
          "author": {
            "type": "string",
            "description": "Author username or full name",
            "example": "John Doe"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Publication date in YYYY-MM-DD HH:MM:SS format",
            "example": "2024-04-01 09:00:00"
          },
          "excerpt": {
            "type": "string",
            "description": "Post excerpt for SEO",
            "example": "This is a brief description of the post content."
          },
          "post_type": {
            "type": "string",
            "enum": ["post", "page"],
            "default": "post",
            "description": "Type of content to create"
          },
          "featured_image_url": {
            "type": "string",
            "format": "uri",
            "description": "URL of the featured image",
            "example": "https://example.com/image.jpg"
          },
          "featured_image_alt_text": {
            "type": "string",
            "description": "Alt text for the featured image",
            "example": "Description of the featured image"
          },
          "featured_image_caption": {
            "type": "string",
            "description": "Caption for the featured image",
            "example": "Image caption text"
          },
          "export_settings": {
            "$ref": "#/components/schemas/ExportSettings"
          },
          "yoast_settings": {
            "$ref": "#/components/schemas/YoastSettings"
          },
          "rankmath_settings": {
            "$ref": "#/components/schemas/RankMathSettings"
          },
          "newspack_settings": {
            "$ref": "#/components/schemas/NewspackSettings"
          }
        }
      },
      "ExportSettings": {
        "type": "object",
        "properties": {
          "compress_images": {
            "type": "boolean",
            "default": true,
            "description": "Compress images before upload"
          },
          "demote_headings": {
            "type": "boolean",
            "default": false,
            "description": "Demote headings by one level"
          },
          "convert_to_webp": {
            "type": "boolean",
            "default": true,
            "description": "Convert images to WebP format"
          },
          "first_image_as_featured_image": {
            "type": "boolean",
            "default": true,
            "description": "Set the first image as featured image"
          },
          "add_no_follow_to_external_links": {
            "type": "boolean",
            "default": true,
            "description": "Add nofollow attribute to external links"
          },
          "bold_as_strong": {
            "type": "boolean",
            "default": false,
            "description": "Convert bold text to strong tag"
          },
          "wp_content_editor": {
            "type": "string",
            "enum": ["classic", "gutenberg_editor"],
            "default": "classic",
            "description": "WordPress content editor to use"
          }
        }
      },
      "YoastSettings": {
        "type": "object",
        "properties": {
          "yoast_focuskw": {
            "type": "string",
            "description": "Yoast focus keyword",
            "example": "wordpress automation"
          },
          "yoast_metadesc": {
            "type": "string",
            "description": "Yoast meta description",
            "example": "Learn how to automate WordPress publishing with Docswrite"
          },
          "yoast_title": {
            "type": "string",
            "description": "Yoast SEO title",
            "example": "WordPress Automation Guide | My Site"
          },
          "yoast_canonical": {
            "type": "string",
            "format": "uri",
            "description": "Canonical URL",
            "example": "https://example.com/wordpress-automation"
          }
        }
      },
      "RankMathSettings": {
        "type": "object",
        "properties": {
          "rank_math_focus_keyword": {
            "type": "string",
            "description": "RankMath focus keyword",
            "example": "wordpress automation"
          }
        }
      },
      "NewspackSettings": {
        "type": "object",
        "properties": {
          "newspack_article_summary": {
            "type": "string",
            "description": "Article summary for Newspack",
            "example": "This article covers WordPress automation techniques"
          },
          "newspack_article_summary_title": {
            "type": "string",
            "description": "Article summary title for Newspack",
            "example": "WordPress Automation Summary"
          },
          "newspack_post_subtitle": {
            "type": "string",
            "description": "Post subtitle for Newspack",
            "example": "A comprehensive guide to automation"
          }
        }
      },
      "CreatePostResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "example": false
          },
          "message": {
            "type": "string",
            "example": "Post added to queue"
          },
          "data": {
            "type": "object",
            "properties": {
              "google_docs_url": {
                "type": "string",
                "example": "https://docs.google.com/document/d/1aBcDeFg/edit"
              },
              "title": {
                "type": "string",
                "example": "My Blog Post"
              },
              "jobId": {
                "type": "string",
                "example": "job-abc123"
              }
            }
          }
        }
      },
      "JobStatusRequest": {
        "type": "object",
        "required": [
          "jobId"
        ],
        "properties": {
          "jobId": {
            "type": "string",
            "description": "Job ID returned from post creation",
            "example": "job-abc123"
          },
          "queueType": {
            "type": "string",
            "default": "post",
            "description": "Type of queue to check",
            "example": "post"
          }
        }
      },
      "JobStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "job-abc123"
              },
              "state": {
                "type": "string",
                "enum": ["waiting", "active", "completed", "failed", "delayed"],
                "example": "completed"
              },
              "progress": {
                "type": "integer",
                "minimum": 0,
                "maximum": 100,
                "example": 100
              },
              "returnValue": {
                "type": "object",
                "description": "Result data when job is completed"
              },
              "failedReason": {
                "type": "string",
                "nullable": true,
                "description": "Error message if job failed"
              },
              "timestamp": {
                "type": "integer",
                "description": "Job creation timestamp",
                "example": 1234567890
              },
              "processedOn": {
                "type": "integer",
                "description": "When job processing started",
                "example": 1234567890
              },
              "finishedOn": {
                "type": "integer",
                "description": "When job finished",
                "example": 1234567890
              }
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Invalid Google Docs URL"
          },
          "details": {
            "type": "string",
            "example": "The provided URL is not accessible or not shared properly"
          }
        }
      }
    }
  }
}